import glob
import os
import pickle
import pandas as pd
import numpy as np
import chromadb

# -------------------------------- INITIALIZE CHROMADB & CREATE COLLECTION --------------------------------
client = chromadb.Client()
collection_name = "subtitle-embeddings"
# client.delete_collection(collection_name) 
# delete if collection existed to avoid error
collection = client.create_collection(collection_name)

# -------------------------------------- ADD EMBEDDINGS TO COLLECTION -------------------------------------
# Path to the folder containing CSV files
folder_path = "D:\GIT-Youtube-Video-Search\Youtube-Video-Search\TextEmbedding"

for csv_file in glob.glob(os.path.join(folder_path, '*.csv')):
    # Load the CSV file into a DataFrame
    df = pd.read_csv(csv_file, header=None)

    # Each row contains embedding vectors of a sentence in that video file
    for index, row in df.iterrows():
        if len(row) > 0:
            embeddings_array = np.array(row.values).tolist()
            sentence_id = f"{index}"

            video_id = os.path.splitext(os.path.basename(csv_file))[0]
            video_id = video_id.replace('.xml_embedded', '')

            collection.add(embeddings=[embeddings_array],
                           ids=[f'{video_id}-{sentence_id}'])
    
    print(f'Added embeddings for {video_id}')

# # -------------------------------------- SAVE COLLECTION AS FILE -------------------------------------

# # Serialize the collection and save it to a file
# collection = client.get_collection(collection_name)
# with open('subtitle_embedding_collection.pkl', 'wb') as file:
#     pickle.dump(collection, file)
#     print("Collection is saved as subtitle_embedding_collection.pkl")

# ------------------------- GET COLLECTION & QUERY USING USER QUESTION EMBEDDING -------------------------
client = chromadb.Client()
collection_name = "subtitle-embeddings"
collection = client.get_collection(collection_name)

# The following embedding is from 'Biden Visits Israel As Gaza Reels From Deadly Hospital Explosion-Sentence' video
# The output should be:
# {'ids': [['Biden Visits Israel As Gaza Reels From Deadly Hospital Explosion-Sentence_138']],
#  'distances': [[0.0]],
#  'metadatas': [[None]],
#  'embeddings': None,
#  'documents': [[None]],
#  'uris': None,
#  'data': None}

result = collection.query(
    query_embeddings=[[-0.06933594, 0.15332031, -0.024902344, 0.17285156, 0.083496094, 0.13085938, -0.15429688, 0.12792969, -0.07763672, -0.0099487305, 0.049316406, -0.12988281, -0.15429688, -0.039794922, -0.16699219, 0.13964844, 0.36132812, 0.029541016, 0.12597656, 0.28125, -0.25585938, -0.171875, 0.067871094, 0.17382812, -0.22167969, 0.00019550323, -0.024169922, -0.03466797, 0.026000977, -0.33007812, -0.19726562, -0.009643555, -0.2109375, 0.08300781, 0.02368164, -0.072265625, -0.32226562, -0.17578125, -0.00023269653, 0.107910156, -0.095214844, 0.068359375, -0.19921875, -0.008605957, 0.118652344, -0.17089844, -0.21386719, -0.20410156, -0.33203125, 0.045654297, -0.12988281, 0.2734375, -0.045166016, 0.01940918, 0.17578125, 0.57421875, -0.40820312, -0.30859375, 0.23046875, -0.34960938, 0.026611328, -0.37890625, -0.3125, 0.037353516, -0.30273438, -0.045654297, -0.34179688, 0.18261719, -0.13183594, 0.118652344, 0.029785156, 0.04638672, 0.23144531, 0.25, 0.17675781, -0.13085938, 0.19433594, 0.11376953, 0.006011963, -0.15234375, -0.12402344, -0.09375, 0.018676758, -0.076171875, 0.12060547, 0.061767578, 0.16015625, 0.08691406, 0.07128906, 0.1640625, 0.125, -0.22265625, -0.19628906, -0.20800781, -0.004699707, 0.14257812, -0.0056152344, 0.30078125, 0.31640625, -0.026000977, 0.0546875, -0.0062561035, -0.2578125, 0.15820312, 0.003540039, 0.25, -0.17089844, -0.024658203, 0.34570312, -0.034423828, 0.076171875, -0.39257812, -0.103515625, 0.15429688, -0.11767578, 0.2578125, -0.10546875, -0.013183594, -0.010253906, 0.1953125, 0.07128906, 0.109375, -0.07128906, 0.14355469, 0.091796875, -0.34960938, -0.26367188, -0.087890625, -0.13671875, 0.37890625, 0.048828125, -0.07763672, -0.20507812, -0.14257812, -0.16210938, 0.27539062, 0.078125, 0.04321289, 0.18359375, 0.05444336, 0.2109375, -0.060546875, -0.006591797, -0.059570312, -0.028320312, -0.27734375, -0.16113281, 0.16503906, -0.053222656, -0.10449219, 0.14746094, -0.22167969, -0.05883789, 0.068359375, 0.01550293, -0.24609375, 0.34570312, 0.017211914, -0.17871094, -0.004486084, -0.0703125, -0.044921875, -0.13671875, -0.009643555, -0.017822266, 0.11767578, 0.21875, -0.20410156, -0.14355469, -0.013549805, -0.10107422, -0.34570312, -0.23046875, -0.012817383, 0.031982422, 0.28710938, 0.43945312, -0.44726562, -0.04663086, -0.1640625, -0.12597656, -0.2109375, -0.14355469, -0.26953125, -0.05908203, -0.087890625, -0.33203125, 0.24511719, -0.25390625, 0.023925781, 0.25585938, -0.08886719, -0.3671875, 0.047607422, 0.24511719, 0.14160156, 0.0024108887, -0.092285156, 0.042236328, -0.0045166016, -0.03466797, -0.064941406, -0.022094727, -0.13867188, 0.21582031, -0.2890625, 0.12597656, 0.115722656, -0.12988281, 0.15234375, 0.36914062, 0.072265625, -0.107910156, -0.07373047, -0.020996094, 0.24023438, 0.40039062, 0.017211914, -0.25585938, -0.07519531, -0.091796875, 0.0138549805, -0.18652344, -0.14453125, -0.19238281, -0.34179688, 0.08300781, -0.26757812, 0.25976562, -0.359375, -0.20507812, -0.14550781, 0.013122559, 0.09082031, -0.026489258, -0.025512695, 0.033935547, 0.34179688, -0.045410156, 0.13964844, 0.20703125, -0.12060547, 0.32226562, -0.047851562, -0.060058594, -0.36328125, -0.015319824, -0.029663086, 0.21484375, 0.015258789, -0.15332031, -0.080566406, -0.057128906, 0.22167969, -0.15234375, -0.25195312, -0.27539062, 0.19335938, -0.08544922, -0.23632812, 0.08251953, 0.06225586, 0.23925781, -0.088378906, -0.011657715, -0.118652344, -0.14550781, -0.036621094, -0.029052734, 0.14550781, 0.14355469, -0.10888672, -0.2734375, -0.008605957, 0.057128906, -0.021606445, 0.043701172, -0.06591797, 0.068359375, -0.047607422, -0.16210938, -0.100097656, -0.06591797, -0.044921875, 0.03125, -0.013000488, -0.21777344, 0.030151367, -0.15722656, 0.12158203, 0.10888672, -0.3125, -0.13378906, -0.044921875, 0.10253906, 0.072753906, 0.10644531, 0.060546875, -0.19238281, 0.27148438]],
    n_results=1
)

print(result)
